"""
Django settings for shop project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY","django-insecure-wobbqg1ljtns#j*yzki)$zrr^$3z8i-yg6)k@22$r&nhfde!m7")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG",True)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'home.apps.HomeConfig',
    'account.apps.AccountConfig',
    'kavenegar',
    'products.apps.ProductsConfig',
    'storages',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'shop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Media files


# MEDIA_URL = 'media/' #تو پوشه مدیا بریز
# MEDIA_ROOT = BASE_DIR / 'media' #تو ریشه برنامه و در پوشه مدیا ذخیر کن

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'account.User'

#ARVAN CLUDE STORAGES

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_ACCESS_KEY_ID = 'e9916666-9045-4fa1-9379-de785d59cd60'
AWS_SECRET_ACCESS_KEY = '34f70dd670c2077d95bb73ed2fa9f7eac5b6d021846cf90ad67eccd107c65000'
AWS_S3_ENDPOINT_URL = 'https://s3.ir-thr-at1.arvanstorage.ir'
AWS_S3_REGION_NAME = "ir-thr-at1"
AWS_STORAGE_BUCKET_NAME = 'ciphershop'
AWS_SERVICE_NAME = 's3'
AWS_LOCAL_STORAGE = f'{BASE_DIR}/aws/' #جای ذخیره سازی ابجکتی که دانلود میشه 

# واسه وقتی اگه دوتا فایل هم نام آپلود شدن جایگزین نکن یه اسم جدید اضافه کن
AWS_S3_FILE_OVERWRITE = False 
AWS_DEFAULT_ACL = None
from datetime import timedelta

CELERY_BROKER_URL = os.environ.get("BROKER_URL","amqp://guest:guest@localhost:5672/")
CELERY_RESULT_BACKEND = os.environ.get("RESULT_BACKEND" , "rpc://")
CELERY_TASK_SERIALIZER = os.environ.get("TASK_SERIALIZER","json") #تسک ها رو به فرمت جیسان تبدیل میکنه برای تبادل بین کلاینت و سرور
CELERY_RESULT_SERIALIZER = os.environ.get("RESULT_SERIALIZER","pickle")
CELERY_ACCEPT_CONTENT = os.environ.get("ACCEPT_CONTENT","json,pickle").split(",")#نوع داده هایی که مجاز هستن برای ما بیان
CELERY_RESULT_EXPIRES = timedelta(days=1)#تاریخ انقضا تسک ها
CELERY_TASK_ALWAYS_EAGER = os.environ.get("TASK_ALWAYS_EAGER",False)#کلاینت رو موقع اجرای تسک منتظر نمیزاره یا بلاک نمیکنه


STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, "static_root")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]